{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebf8\\\\OneDrive\\\\Desktop\\\\Gempro\\\\Frontend\\\\src\\\\AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCarrito } from \"./components/CarritoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst loginU = async function (data) {\n  const usuario = {\n    nombre_usuario: data.username,\n    contrasena: data.password\n  };\n  const response = await fetch(\"http://localhost:3000/usuario/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(usuario)\n  });\n  return response.json();\n};\nconst loginC = async function (data) {\n  const cliente = {\n    nombre_usuario: data.username,\n    contrasena: data.password\n  };\n  const response = await fetch(\"http://localhost:3000/cliente/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(cliente)\n  });\n  return response.json();\n};\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"site\") || \"\");\n  const navigate = useNavigate();\n  const {\n    limpiarCarrito\n  } = useCarrito();\n  const loginAction = async data => {\n    try {\n      // Intentar iniciar sesión como usuario\n      /*const responseU = await loginU(data);\r\n      if (!responseU.error) {\r\n        setUser({ ...responseU.usuario, tipo: \"usuario\" }); // Almacena los datos del usuario\r\n        setToken(responseU.token);\r\n        localStorage.setItem(\"site\", responseU.token);\r\n        console.log(\"Usuario logeado:\", responseU.usuario); // Console log para verificar el usuario\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }*/\n\n      // Si falló, intentar iniciar sesión como cliente\n      const responseC = await loginC(data);\n      if (!responseC.error) {\n        setUser({\n          ...responseC.cliente,\n          tipo: \"cliente\"\n        }); // Almacena los datos del cliente\n        setToken(responseC.token);\n        localStorage.setItem(\"site\", responseC.token);\n        console.log(\"Cliente logeado:\", responseC.cliente); // Console log para verificar el cliente\n        navigate(\"/dashboard\");\n        return;\n      }\n\n      // Si ambos intentos fallaron, lanzar un error\n      throw new Error(responseU.error || responseC.error);\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error.message);\n      // Manejo de errores o mensajes de error\n    }\n  };\n  const logOut = () => {\n    setUser(null);\n    setToken(\"\");\n    localStorage.removeItem(\"site\");\n    limpiarCarrito();\n    navigate(\"/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loginAction,\n      logOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"g8xScBU6m4JvfgYyG6QRFD5JU7E=\", false, function () {\n  return [useNavigate, useCarrito];\n});\n_c = AuthProvider;\nexport default AuthProvider;\n\n// Hook personalizado\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useNavigate","useCarrito","jsxDEV","_jsxDEV","AuthContext","loginU","data","usuario","nombre_usuario","username","contrasena","password","response","fetch","method","headers","body","JSON","stringify","json","loginC","cliente","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","navigate","limpiarCarrito","loginAction","responseC","error","tipo","setItem","console","log","Error","responseU","message","logOut","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/rebf8/OneDrive/Desktop/Gempro/Frontend/src/AuthProvider.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCarrito } from \"./components/CarritoContext\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst loginU = async function (data) {\r\n  const usuario = { nombre_usuario: data.username, contrasena: data.password };\r\n  const response = await fetch(\"http://localhost:3000/usuario/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(usuario),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nconst loginC = async function (data) {\r\n  const cliente = { nombre_usuario: data.username, contrasena: data.password };\r\n  const response = await fetch(\"http://localhost:3000/cliente/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(cliente),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem(\"site\") || \"\");\r\n  const navigate = useNavigate();\r\n  const { limpiarCarrito } = useCarrito();\r\n\r\n  const loginAction = async (data) => {\r\n    try {\r\n      // Intentar iniciar sesión como usuario\r\n      /*const responseU = await loginU(data);\r\n      if (!responseU.error) {\r\n        setUser({ ...responseU.usuario, tipo: \"usuario\" }); // Almacena los datos del usuario\r\n        setToken(responseU.token);\r\n        localStorage.setItem(\"site\", responseU.token);\r\n        console.log(\"Usuario logeado:\", responseU.usuario); // Console log para verificar el usuario\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }*/\r\n\r\n      // Si falló, intentar iniciar sesión como cliente\r\n      const responseC = await loginC(data);\r\n      if (!responseC.error) {\r\n        setUser({ ...responseC.cliente, tipo: \"cliente\" }); // Almacena los datos del cliente\r\n        setToken(responseC.token);\r\n        localStorage.setItem(\"site\", responseC.token);\r\n        console.log(\"Cliente logeado:\", responseC.cliente); // Console log para verificar el cliente\r\n        navigate(\"/dashboard\");\r\n        return;\r\n      }\r\n\r\n      // Si ambos intentos fallaron, lanzar un error\r\n      throw new Error(responseU.error || responseC.error);\r\n    } catch (error) {\r\n      console.error(\"Error al iniciar sesión:\", error.message);\r\n      // Manejo de errores o mensajes de error\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    setUser(null);\r\n    setToken(\"\");\r\n    localStorage.removeItem(\"site\");\r\n    limpiarCarrito();\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, loginAction, logOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n\r\n// Hook personalizado\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}